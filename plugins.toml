[[plugins]]
repo = 'Shougo/dein.vim'

# colorscheme {{{
[[plugins]]
repo = 'morhetz/gruvbox'
hook_add = '''
    let g:gruvbox_termcolors=256
    let g:gruvbox_contrast_dark="hard"
    let g:gruvbox_vert_split="bg0"
    set bg=dark
'''

[[plugins]]
repo = 'kristijanhusak/vim-hybrid-material'
hook_add = '''
    let g:airline_theme = "hybrid"
    autocmd MyAutoCmd VimEnter * nested colorscheme hybrid_material
    set bg=dark
'''
# }}}

# vim-airline (status and tabline) {{{
[[plugins]]
repo = 'vim-airline/vim-airline'
hook_add = '''
    let g:airline#extensions#tabline#enabled = 1
    
    " show the airline_tab type is tab or buffer (top right)
    let g:airline#extensions#tabline#show_tab_type = 1
    
    " close symbol (top right)
    let g:airline#extensions#tabline#close_symbol = 'X'
    
    " enable displaying buffers with a single tab 
    " it mean airline_tab type is buffer
    let g:airline#extensions#tabline#show_buffers = 1
    " Show the buffer order with a single tab
    " convient to use <leader>n to switch buffer
    let g:airline#extensions#tabline#buffer_idx_mode = 1
    
    " if airline_tab type is tab
    " convient to use <leader>n to switch tap
    let g:airline#extensions#tabline#tab_nr_type = 1 
    
    " disable show split information on top right
    let g:airline#extensions#tabline#show_splits = 0
    
    nmap <leader>1 <Plug>AirlineSelectTab1
    nmap <leader>2 <Plug>AirlineSelectTab2
    nmap <leader>3 <Plug>AirlineSelectTab3
    nmap <leader>4 <Plug>AirlineSelectTab4
    nmap <leader>5 <Plug>AirlineSelectTab5
    nmap <leader>6 <Plug>AirlineSelectTab6
    nmap <leader>7 <Plug>AirlineSelectTab7
    nmap <leader>8 <Plug>AirlineSelectTab8
    nmap <leader>9 <Plug>AirlineSelectTab9
'''
# }}}

# tcomment_vim (comment) {{{
[[plugins]]
repo = 'tomtom/tcomment_vim'
# }}}

# vim-cursorword (underline the word under the cursor) {{{
[[plugins]]
repo = 'itchyny/vim-cursorword'
# }}}

# indentine (display indentions levels) {{{
[[plugins]]
repo = 'Yggdroot/indentLine'
# }}}

# rainbow (rainbow parenthethese) {{{
[[plugins]]
repo = 'luochen1990/rainbow'
hook_add = '''
    let g:rainbow_active = 1 
'''
# }}}

# vim dispatch (async build and test) {{{
[[plugins]]
repo = 'tpope/vim-dispatch'
# }}}

# gen_tags (ctags/gtags) {{{
[[plugins]]
repo = 'jsfaint/gen_tags.vim'
# gen_tags support deoplete source
hook_add = '''
    let  g:gen_tags#gtags_default_map = 1
'''
# }}}

# vim-unimpaired (pairs of handy bracket mappings) {{{
[[plugins]]
repo = 'tpope/vim-unimpaired'
# }}}

# ale (async lint engine) {{{
[[plugins]]
repo = 'w0rp/ale'
hook_add = '''
    let g:ale_completion_enabled = 0
    let g:ale_fix_on_save = 0
    let g:ale_linters = {
    \   'python': ['flake8'],
    \   'rust': ['rustc', 'cargo']
    \}
    let g:ale_set_loclist = 0
    let g:ale_set_quickfix = 1
'''
# }}}

# vim-surround (delte change and add surroundings) {{{
[[plugins]]
repo = 'tpope/vim-surround'
# }}}

# cpsm matcher {{{
[[plugins]]
repo = 'nixprime/cpsm'
build = 'sh -c "PY3=ON ./install.sh"'
# }}}

# " vim: set foldmethod=marker tw=80 sw=4 ts=4 sts =4 sta nowrap et :
